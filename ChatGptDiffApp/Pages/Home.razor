@page "/"
@inject ChatGPTDiffApp.Services.ChatGPTService ChatGPTService
@using ChatGPTDiffApp.Models
@using System.Linq

<h1>Chat with GPT</h1>

<textarea @bind="newPrompt" placeholder="Enter your next prompt here"></textarea>
<button @onclick="SendPrompt">Send</button>

@foreach (var message in conversation.DiffView())
{
    if (message.Role == "user")
    {
        <textarea @bind="message.Content" placeholder="Your prompt"></textarea>
    }
    else if (message.Role == "assistant")
    {
        @* TODO Security Consideration
        When using MarkupString to render HTML directly, ensure that the content you're rendering is safe and free from potential cross-site scripting (XSS) vulnerabilities. Since the DiffView method generates the HTML content programmatically and you control the input, this should generally be safe. However, always be cautious and sanitize any dynamic content or user input that might be included in the HTML. *@
        <div class="response">@((MarkupString)message.Content)</div>
    }
}

@code {
    private Conversation conversation = new Conversation();
    private string newPrompt = string.Empty;

    private async Task SendPrompt()
    {
        if (!string.IsNullOrWhiteSpace(newPrompt))
        {
            // Add the new user prompt to the conversation
            conversation.Insert(0, new Message { Role = "user", Content = newPrompt });

            // Prepare the data for the request
            var responseContent = await ChatGPTService.GetResponseAsync(conversation);
            
            // Add the response to the conversation
            if (!string.IsNullOrEmpty(responseContent))
            {
                conversation.Insert(0, new Message { Role = "assistant", Content = responseContent });
            }

            // Clear the new prompt field and prepare for the next input
            newPrompt = string.Empty;
        }
    }

    protected override void OnInitialized()
    {
        // Optionally initialize the conversation with an empty prompt for the user to fill
        newPrompt = string.Empty;
    }
}

