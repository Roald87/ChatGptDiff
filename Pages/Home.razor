@page "/"
@inject ChatGPTDiffApp.Services.ChatGPTService ChatGPTService
@using ChatGPTDiffApp.Models 

<h1>Chat with GPT</h1>

@foreach (var message in conversation)
{
    if (message.Role == "user")
    {
        <textarea @bind="message.Content" placeholder="Your prompt"></textarea>
    }
    else if (message.Role == "assistant")
    {
        <textarea readonly @bind="message.Content" class="response"></textarea>
    }
}

<textarea @bind="newPrompt" placeholder="Enter your next prompt here"></textarea>
<button @onclick="SendPrompt">Send</button>

@code {
    private List<Message> conversation = new List<Message>();
    private string newPrompt;

    private async Task SendPrompt()
    {
        if (!string.IsNullOrWhiteSpace(newPrompt))
        {
            // Add the new user prompt to the conversation
            conversation.Add(new Message { Role = "user", Content = newPrompt });

            // Prepare the data for the request
            var responseContent = await ChatGPTService.GetResponseAsync(conversation);
            
            // Add the response to the conversation
            if (!string.IsNullOrEmpty(responseContent))
            {
                conversation.Add(new Message { Role = "assistant", Content = responseContent });
            }

            // Clear the new prompt field and prepare for the next input
            newPrompt = string.Empty;
        }
    }

    protected override void OnInitialized()
    {
        // Optionally initialize the conversation with an empty prompt for the user to fill
        newPrompt = string.Empty;
    }
}


<style>
textarea {
    width: 100%;
    margin-bottom: 10px;
    padding: 10px;
    box-sizing: border-box;
}

textarea.response {
    background-color: #f3f3f3;
    color: #333;
}

    button {
        padding: 10px 20px;
        cursor: pointer;
    }
    label {
        display: block;
        margin-top: 20px;
    }
</style>

